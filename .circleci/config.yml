version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.15

aliases:
  - &workdir /home/circleci/build

  - &install_aws_cli aws-cli/install

  - &install_typescript_globally
    run:
      name: Install Typescript globally
      command: yarn global add typescript

  - &configure_aws_cli
    aws-cli/configure:
      aws-region: 'AWS_REGION'
      aws-access-key-id: 'AWS_ACCESS_KEY_ID'
      aws-secret-access-key: 'AWS_SECRET_ACCESS_KEY'

  - &deploy
    run:
      name: Release everything
      command: yarn deploy

  - &deploy_production_filters
    filters:
      branches:
        only: master

  - &restore-cache
    restore_cache:
      keys:
        - dependencies-cache-{{ checksum "package.json" }}

  - &save-cache
    save_cache:
      paths:
        - node_modules
        - package.json
      key:
        dependencies-cache-{{ checksum "package.json" }}

  - &node-build-steps
      - checkout:
          path: ~/breakdown
      - *restore-cache
      - run:
          name: This reckless command will cause an non-zero exit if the cache doens't exist.
          command: |
            ls node_modules
      - *install_aws_cli
      - *configure_aws_cli
      - run:
          command: |
            yarn
            yarn build
            rm -rf src
            yarn package
      - *save-cache
      - *deploy

jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/breakdown/services/websocket-gateway

    steps:
      *node-build-steps

  build-postgraphile:
    docker:
      - image: circleci/node:10
    working_directory: ~/breakdown/services/postgraphile

    steps:
      *node-build-steps

  build-web:
    docker:
      - image: circleci/node:10
    working_directory: ~/breakdown/web

    steps:
      - checkout:
          path: ~/breakdown
      - *restore-cache
      - *install_aws_cli
      - *configure_aws_cli
      - run:
          command: |
            yarn
            yarn build
            rm -rf src
      - *save-cache
      - run:
          name: Deploy
          command: |
            aws cloudfront create-invalidation --distribution-id $CDN_DISTRIBUTION_ID --paths "/*"
            aws s3 cp dist/ s3://$WEB_S3_BUCKET --recursive --acl public-read

workflows:
  version: 2
  websocket-gateway:
    jobs:
      - build:
          <<: *deploy_production_filters
          context: aws-production
  web:
    jobs:
      - build-web:
          <<: *deploy_production_filters
          context: aws-production

  postgraphile:
    jobs:
      - build-postgraphile:
          <<: *deploy_production_filters
          context: aws-production
