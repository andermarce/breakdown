version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

commands:
  save_service_cache:
    description: "Computes a checksum for a service directory"
    parameters:
      service_directory:
        type: string
    steps:
      - save_cache:
          paths:
            - node_modules
          key: dependencies-cache-{{ checksum "<< parameters.service_directory >>package.json" }}

  restore_service_cache:
    description: "Computes a checksum for a service directory"
    parameters:
      service_directory:
        type: string
    steps:
      - restore_cache:
          keys:
            - dependencies-cache-{{ checksum "<< parameters.service_directory >>package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-cache

aliases:
  - &workdir /home/circleci/build

  - &container_config
    docker:
      - image: circleci/node:10
    working_directory: *workdir

  - &checkout checkout

  - &install_aws_cli aws-cli/install

  - &install_typescript_globally
    run:
      name: Install Typescript globally
      command: yarn global add typescript

  - &configure_aws_cli
    aws-cli/configure:
      aws-region: 'AWS_REGION'
      aws-access-key-id: 'AWS_ACCESS_KEY_ID'
      aws-secret-access-key: 'AWS_SECRET_ACCESS_KEY'

  - &deploy
    run:
      name: Release everything
      command: yarn deploy

  - &deploy_integration_filters
    filters:
      branches:
        only: integration

jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: *workdir

    steps:
      - *checkout
      - *install_aws_cli
      - *configure_aws_cli
      - run:
          command: cd web
      - restore_service_cache:
          service_directory: "web"
      - save_service_cache:
          service_directory: "web"
      - run:
          command: yarn
      - run:
          command: yarn build
      - run:
          command: rm -rf src
      - run:
          command: yarn package

workflows:
  version: 2
  websocket-gateway:
    jobs:
      - build:
          <<: *deploy_integration_filters
          context: aws-production
